ProgDef. Program ::= [Definition] ;
terminator Definition "";

Func. Definition ::= DataType Identifier Args FunctionBody ;

FBody. FunctionBody  ::= "{" [Stm] "}" ;
terminator Stm "" ;

Argument. Argument ::= DataType Identifier ;

ArgumentList. Args ::= "(" [Argument] ")" ;
separator Argument ",";

ExpStatement. Stm ::= Exp ";" ;
RetStatement. Stm ::= "return" Exp ";" ;

ELS.  Exp 	::= Exp "<<" Exp1 ;
ERS.  Exp 	::= Exp ">>" Exp1 ;
EQC.  Exp1 	::= QConst ;
ELit. Exp1	::= Lit ;

coercions Exp 1 ;

Int.    DataType ::= "int" ;
Bool.   DataType ::= "bool" ;
Char.   DataType ::= "char" ;
Double. DataType ::= "double" ;
Void.   DataType ::= "void" ;


QConst.    QConst ::= [Identifier] ;
separator nonempty Identifier "::" ;

LInt. Lit ::= Integer ;
LString. Lit ::= String ;

Id. Identifier ::= Ident ;

PreDir. Com ::= "#" String "\n" ;

comment "//" ;
comment "/*" "*/" ;